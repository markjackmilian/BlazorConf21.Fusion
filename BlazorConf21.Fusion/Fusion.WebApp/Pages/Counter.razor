@page "/counter"
@inherits Stl.Fusion.Blazor.LiveComponentBase<int>
@inject IJSRuntime JsRuntime;
@using Fusion.Shared
@using System.Threading
@using Stl.Fusion
@inject ISumService Client

<h1>Counter</h1>

<p>Current count: @State.LastValue</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    
    protected override void OnInitialized()
    {
        StateHasChangedTriggers = StateEventKind.All;
        base.OnInitialized();
    }
    

    private async Task IncrementCount()
    {
        await this.Client.AddOne();
    }

    protected override void ConfigureState(LiveState<int>.Options options) => options.WithInstantUpdates();

    protected override async Task<int> ComputeStateAsync(CancellationToken cancellationToken)
    {
        return 16;
        var value = await this.Client.GetValue();
        await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        Console.WriteLine($"Updated value is {value}");
        return value;
    }

}