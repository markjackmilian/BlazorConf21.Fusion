@page "/fetchdata"

@using Signalr.Blazor.Data
@using Microsoft.AspNetCore.SignalR.Client
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in _forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] _forecasts;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        
        this._hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:5001/weather")
            .WithAutomaticReconnect()
            .Build();
        this._hubConnection.On<WeatherForecast[]>("NewForecast", ( message) =>
        {
            this._forecasts = message;
            StateHasChanged();
        });
        await this._hubConnection.StartAsync();
    }
}